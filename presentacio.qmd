---
title: "StatWars: el meu primer model predictiu"
author: "Arnau Garcia"
format: revealjs
editor: visual
---

## Introducció

En aquesta activitat, us volem presentar una eina molt poderosa que utilitzem en estadística per entendre millor el món que ens envolta: els **models predictius**. Farem servir:

* **Regressions lineals**
* **Regressions lineals generalitzades**

Veurem com podem utilitzar les matemàtiques per establir relacions entre diferents variables i fer prediccions amb aquestes.

## Introducció

Aquest document serveix com a exemple de com ajustar dos models predictius fent servir el llenguatge de programació **R**. **R**, és el principal llenguatge de programació pels estadístics. Es tracta d'un software lliure, gratuït que es troba a l'abast de tothom.

* <https://es.wikipedia.org/wiki/R\_(lenguaje_de_programaci%C3%B3n)>

## Introducció

Veurem dos models predictius:

* Predicció de preus d'habitatges. 
* Predicció d'espècies de pingüins.

## Predicció de preus d'habitatges

En aquest primer model volem predir el preu de les cases de la ciutat de Ames, a Iowa. Farem servir una base de dades amb dades reals sobre inmobles en aquesta ciutat dels Estats Units. Podeu trobar informació sobre la base de dades original a <https://www.openintro.org/data/index.php?data=ames>.

![Ames, Iowa](images/ames.jpg)

## Taula de dades

Farem servir la següent taula de dades per entrenar el nostre primer model predictiu:

```{r}
cases_train <- read.csv("cases_train.csv")
cases_train$X <- NULL
library(knitr)
kable(head(cases_train))
```

## Variables

En aquesta base de dades tenim informació sobre 2842 vivendes, per cadascuna tenim 10 variables. Les variables que tenim en aquesta taula són:

* `preu`: preu de l'habitatge.
* `area`: àrea de la vivenda (en peus quadrats).
* `qual.total`: valora de l'1 al 10 el material i el acabat general de l'habitatge.
* `condicio.total`: valora de l'1 al 10 l'estat general de l'habitatge.
* `any`: any de construcció de la vivenda.

## Variables

* `carrer`: tipus de carrer que dona accés a l'inmoble.
* `tipus`: tipus d'habitatge. 
* `garatge.cotxes`: número de cotxes que hi caben en el garatge.
* `garatge.area`: àrea del garatge (en peus quadrats).
* `aire`: variable que indica si la vivenda té aire condicionat (Y si en té, N si no). 

## Exploració de dades

Fem una exploració de les dades a través de diferents gràfics que ens ajudaran a saber com es comporten les nostres variables amb respecte la variable que volem predir (`preu`).

```{r}
library(ggplot2)
ggplot(data = cases_train) +
  geom_point(aes(x = area, y = preu), color = "tomato")
```

## Exploració de dades

```{r}
ggplot(data = cases_train) +
  geom_point(aes(x = qual.total, y = preu), color = "skyblue")
```

## Exploració de dades 

```{r}
ggplot(data = cases_train) +
  geom_point(aes(x = condicio.total, y = preu), color = "darkorange")
```

## Exploració de dades 

```{r}
ggplot(data = cases_train) +
  geom_point(aes(x = any, y = preu), color = "blueviolet")
```

## Exploració de dades

```{r}
ggplot(data = cases_train) +
  geom_boxplot(aes(x = carrer, y = preu), color = "cyan")
```

## Exploració de dades

```{r}
ggplot(data = cases_train) +
  geom_boxplot(aes(x = tipus, y = preu), color = "coral4")
```

## Exploració de dades

```{r}
ggplot(data = cases_train) +
  geom_point(aes(x = garatge.cotxes, y = preu), color = "blue")
```

## Exploració de dades

```{r}
ggplot(data = cases_train) +
  geom_point(aes(x = garatge.area, y = preu), color = "chartreuse3")
```

## Exploració de dades

```{r}
ggplot(data = cases_train) +
  geom_boxplot(aes(x = aire, y = preu), color = "deepskyblue3")
```

## Model lineal

Ajustarem el següent model lineal:

$$ preu_i = \beta_1area_i + \beta_2qual.total_i + \beta_3condicio.total_i + \beta_4any_i + \beta_5tipus_i \\ 
+ \beta_6garatge.area_i + \beta_7aire_i$$

Els diferents $\beta$'s són coeficients que hem d'estimar.

## Model lineal

Ajustem un model lineal (podeu veure informació sobre el model lineal a <https://es.wikipedia.org/wiki/Regresi%C3%B3n_lineal>):

```{r}
model.lineal <- lm(preu ~ area + qual.total + condicio.total + any + tipus + 
           garatge.area + aire, data = cases_train)
summary(model.lineal)
```

## Dades de test

Ara, descarreguem una taula de dades que teniem guardada apart. En aquesta taula de dades hi ha dades noves que no s'han fet servir per entrenar el nostre model. El que farem amb aquestes noves dades és testejar el nostre model i veure si és capaç de fer bones prediccions.

## Dades de test

```{r}
cases_test <- read.csv("cases_test.csv")
cases_test$X <- NULL
kable(head(cases_test))
```

## Prediccions

A continuació, fem **prediccions** amb el model que hem ajustat anteriorment, i veiem si aquestes prediccions s'acosten al valor real de les noves dades.

## Prediccions

```{r}
preds <- predict(model.lineal, newdata = cases_test)
comparison <- data.frame(Real = cases_test$preu, Predit = preds,
                         Difer = abs(cases_test$preu - preds))
kable(head(comparison, 8))
```

## Predicció d'espècies de pingüins

En aquest segon model volem predir espècies de pingüins tenint en compte característiques físiques d'aquests. Les tres espècies de pinguins amb les que treballarem són: **Gentoo**, **Adelie** i **Chinstrap**.

## Gentoo

![](images/gentoo.jpeg)

## Adelie

![](images/adelie.webp)

## Chinstrap

![](images/chinstrap.png)

## Base de dades

llegim la base de dades i imprimim algunes de les observacions de la taula de dades que farem servir:

```{r}
penguins_train <- read.csv("penguins_train.csv")
penguins_train$X <- NULL
# convertim en factors les variables categòriques
penguins_train$sex <- factor(penguins_train$sex)
kable(head(penguins_train))
```

## Variables

* `species`: espècie del pingüi (pot ser Gentoo, Adelie o Chinstrap).
* `island`: illa de procedència del pingüi.
* `bill_length_mm`: longitud del bec (en mm).
* `bill_depth_mm`: profunditat del bec (en mm).
* `flipper_length_mm`: longitud de les aletes (en mm).
* `body_mass_g`: pes (en grams).
* `sex`: sexe del pingüi.

## Observació 

Mentre que abans volíem predir una variable numèrica i contínua (el preu d'habitatge), ara *volem predir una variable categòrica*. Així doncs, haurem de fer servir un altre model diferent. En aquest cas farem servir un *model lineal generalitzat* (veure més informació a <https://es.wikipedia.org/wiki/Modelo_lineal_generalizado>).

## Exploració de dades

```{r}
ggplot(penguins_train) +
  geom_boxplot(aes(x=species, y=bill_length_mm), color = "tomato")
```

## Exploració de dades

```{r}
ggplot(penguins_train)+
  geom_boxplot(aes(x=species, body_mass_g), color = "blue")
```

## Exploració de dades

```{r}
ggplot(penguins_train)+
  geom_boxplot(aes(x=species, y=bill_depth_mm), color = "chartreuse3")
```

## Exploració de dades

```{r}
ggplot(penguins_train)+
  geom_boxplot(aes(x=species, y=flipper_length_mm), color = "cyan3")
```

## Exploració de dades

```{r}
ggplot(penguins_train)+
  geom_point(aes(x=bill_length_mm, y=bill_depth_mm, color=species))
```

## Exploració de dades

També podem fer una taula per veure quines espècies de pingüins hi ha a cada illa:

```{r}
with(penguins_train, kable(table(species, island)))
```

## Model lineal generalitzat

Ajustem ara el model lineal generalitzat:

```{r}
library(nnet)
model.lingen <- step(multinom(species ~ . , data = penguins_train, 
                              trace = FALSE), trace = 0)
summary(model.lingen)
```

## Noves dades per fer el test

A continuació ens baixem les dades per fer el test:

```{r}
penguins_test <- read.csv("penguins_test.csv")
penguins_test$year <- NULL
penguins_test$sex <- factor(penguins_test$sex)
kable(head(penguins_test))
```

## Prediccions

El que farem ara és dur a terme les prediccions de les noves dades fent servir el model que hem entrenat anteriorment. Un cop fetes les prediccions construirem l'anomenada matriu de confusió. En aquesta matriu podrem veure les espècies que ha predit el nostre model, juntament amb les espècies que són correctes (les que hi ha a la nova taula de dades que estem fent servir).

## Prediccions 

```{r}
library(caret)
preds_train <- predict(model.lingen, newdata = penguins_test)
confusionMatrix(preds_train, factor(penguins_test$species))
```

## Resultats

* Com podeu veure el nostre model només s'ha equivocat una vegada! Un dels pingüins ha estat classificat com a Adelie quan en realitat era Chinstrap. 
* En tots els altres casos la classificació ha estat correcte. 
* Podem veure que el nostre model ha fet una classificació amb una precisió (accuracy) del 99%!

## Accés lliure al repositori

Podeu accedir lliurement a un repositori on hi ha penjades les dades i el codi de programació usat per fer-ho tot.

![](images/frame.png)
